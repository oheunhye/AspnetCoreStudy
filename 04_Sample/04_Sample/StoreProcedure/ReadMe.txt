저장프로시저
길고 복잡한 명령 (삽입 수정 삭제)가 반복적으로 필요할때,
개발자의 편의와 프로그램의 속도성능을 개선하기 위해


-개요
일련의 쿼리작업을 일괄적으로 처리하기 위한 쿼리의 집합
*데이터베이스에 대한 일련의 작업절차를 데이터베이스에 저장한 것*

-저장프로시저 특징
자주 반복해서 사용하는 쿼리문을 데이터베이스에 저장해놓고 필요한 경우에만 사용하므로
반복적구분을 다시 작성할 필요가 없어 효율적이고 성능면에서 우수.
쿼리 전체를 서버로 전송하여 작업하는 일반쿼리문대신 매개변수값만을 서버로 전달해 데이터량이 적음.


Query의 수행단계
-일반 sql문 처음 실행시 작업단계
	1.구문분석 단계	:sql구문 문법 검사
	2.표준화 작업	:DB의 구성개체들에 대한 검사 실시
	3.보안			:해당 DB개체들에 대한 사용자의 권한 검사
	4.최적화 작업	:최적의 성능을 내기위한 사항적용
	5.번연작업(컴파일)

	-반복수행시 작업단계
		1.처음 실행한 sql구문의 실행계획이 메모리에 저장(캐싱)되었는지 확인 후, 이를 수행
		2.메모리 저장안된 경우, 처음 실행단계 다시 시작

-저장프로시져 생성시 수행작업
	1.구문분석		:프로시저 생성구문의 sql구문검사
	2.표준화작업	:DB구성 개체들에 대한 검사
	3.보안 점검		:프로시저에 대해 생성이 가능한지 여부 검사
	4.저장작업

	-저장프로시저 처음 실행시 수행작업
		1.보안 점검		:해당 DB개체에 대한 사용자의 사용권한 검사
		2.최적화		:최적의 성능을 내기위한 사항을 정용
		3.컴파일 실행
		4.수행 계획을 생성하여 메모리에 저장 후 실행

	-반복실행작업
		1.실행 계획이 메모리에 저장되었는지 확인 후 실행
		2.메모리에 실행계획이 없는 경우 처음 수행작업 반복

----------------------------------------------------------------------------------------------
프로시저 문법

-생성
CREAT PROCEDURE 스키마.저장프로시저명
[@매개변수 변수형식]
AS
[SQL]구문
GO

-수정
ALTER PROCEDURE 스키마.저장프로시저명
@매개변수 데이터형식
AS
[변경된 SQL문]

-삭제
DROP PROCEDURE 스키마.저장프로시저명;